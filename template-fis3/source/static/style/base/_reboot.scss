/**
 * Reboot
 * based on bootstrap v4 reboot https://github.com/twbs/bootstrap
 * and suitcss https://github.com/suitcss/base
 * @module: reboot
 * @author: fisker Cheung <lionkay@gmail.com>
 * @date: 2016-01-26Z16:27:20+0800
 * @version: 1.1
 */

// Make viewport responsive
//
// @viewport is needed because IE 10+ doesn't honor <meta name="viewport"> in
// some cases. See http://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/.
// Eventually @viewport will replace <meta name="viewport">. It's been manually
// prefixed for forward-compatibility.
//
// However, `device-width` is broken on IE 10 on Windows (Phone) 8,
// (see http://timkadlec.com/2013/01/windows-phone-8-and-device-width/ and https://github.com/twbs/bootstrap/issues/10497)
// and the fix for that involves a snippet of JavaScript to sniff the user agent
// and apply some conditional CSS.
//
// See http://getbootstrap.com/getting-started/#support-ie10-width for the relevant hack.
//
// Wrap `@viewport` with `@at-root` for when folks do a nested import (e.g.,
// `.class-name { @import "bootstrap"; }`).
@at-root {
  @-ms-viewport {
    width: device-width;
  }
}

html {
  // Sets a specific default `font-size` for user with `rem` type scales.
  font-size: $root-font-size;

  @if $use-border-box {
    box-sizing: border-box;
  }

  // As a side-effect of setting the @viewport above,
  // IE11 & Edge make the scrollbar overlap the content and automatically hide itself when not in use.
  // Unfortunately, the auto-showing of the scrollbar is sometimes too sensitive,
  // thus making it hard to click on stuff near the right edge of the page.
  // So we add this style to force IE11 & Edge to use a "normal", non-overlapping, non-auto-hiding scrollbar.
  // See https://github.com/twbs/bootstrap/issues/18543
  -ms-overflow-style: scrollbar;

  // Changes the default tap highlight to be completely transparent in iOS.
  -webkit-tap-highlight-color: transparent;
  text-rendering: optimizelegibility;
}

*,
::before,
::after {
  @if $use-border-box {
    box-sizing: inherit;
  }

  // specify the core styles of all elements
  background-repeat: no-repeat;
}

body {
  font-family: $base-font-family;
  font-size: $base-font-size;
  line-height: $base-line-height;

  // Go easy on the eyes and use something other than `#000` for text
  color: $base-color;

  // By default, `<body>` has no `background-color` so we set one as a best practice.
  background-color: #fff;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-feature-settings: "liga";
}


// Suppress the focus outline on elements that cannot be accessed via keyboard.
// This prevents an unwanted focus outline from appearing around elements that
// might still respond to pointer events.
//
// Credit: https://github.com/suitcss/base
[tabindex="-1"]:focus {
  outline: none !important;
}

%margin-bottom {
  margin-top: 0;
  margin-bottom: $base-font-size;
}

%margin-bottom-half {
  margin-top: 0;
  margin-bottom: $base-font-size * .5;
}

// Remove top margins from headings
//
// By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
// margin for easier control within type scales as it avoids margin collapsing.
h1,
h2,
h3,
h4,
h5,
h6 {
  @extend %margin-bottom-half;
}

// Reset margins on paragraphs
//
// Similarly, the top margin on `<p>`s get reset. However, we also reset the
// bottom margin to use `rem` units instead of `em`.
p {
  @extend %margin-bottom;
}

// Abbreviations and acronyms
// Add data-* attribute to help out our tooltip plugin, per https://github.com/twbs/bootstrap/issues/5257
abbr[title],
abbr[data-original-title] {
  cursor: help;
  border-bottom: 1px dotted #818a91;
}

address {
  margin-bottom: $base-font-size;
  font-style: normal;
  line-height: inherit;
}

ol,
ul {
  @extend %margin-bottom;

  ol,
  ul {
    margin-bottom: 0;
  }
}

ul {
  list-style: none;
  padding-left: 0;

  @if $legacy-ie {
    margin-left: 0;
  }
}

@if $legacy-ie {
  ol {
    margin-left: 0;
    padding-left: 40px;
  }
}

dl {
  @extend %margin-bottom;

  @if $legacy-ie {
    *margin-left: 0;
  }
}

dt {
  font-weight: bold;
}

dd {
  margin-left: 0; // Undo browser default
  margin-bottom: $base-font-size * .5;
}

blockquote {
  margin: 0 0 $base-font-size;
}

a {
  text-decoration: $link-decoration;
  color: $link-color;
  @if $link-color == 'inherit' and $legacy-ie {
    *color: $base-color;
  }

  &:focus,
  &:hover {
    text-decoration: $link-hover-decoration;
    color: $link-hover-color;
    @if $link-hover-color == 'inherit' and $legacy-ie {
      *color: $base-color;
    }
  }

  @if $focus-outline {
    &:focus {
      outline: thin dotted;
      outline: 5px auto -webkit-focus-ring-color;
      outline-offset: -2px;
    }
  }
}

figure {
  // Normalize adds `margin` to `figure`s as browsers apply it inconsistently.
  // We reset that to create a better flow in-page.
  margin: 0 0 $base-font-size;
}

img {
  // By default, `<img>`s are `inline-block`. This assumes that, and vertically
  // centers them. This won't apply should you reset them to `block` level.
  vertical-align: middle;
  -ms-interpolation-mode: bicubic;

  // Get rid of gap under images by making them display: inline-block; by default
  // https://github.com/zurb/foundation-sites/blob/develop/scss/_global.scss
  max-width: 100%;
  height: auto;
  display: inline-block;
}

// Avoid 300ms click delay on touch devices that support the `touch-action` CSS property.
//
// In particular, unlike most other browsers, IE11+Edge on Windows 10 on touch devices and IE Mobile 10-11
// DON'T remove the click delay when `<meta name="viewport" content="width=device-width">` is present.
// However, they DO support removing the click delay via `touch-action: manipulation`.
// See:
// * http://v4-alpha.getbootstrap.com/content/reboot/#click-delay-optimization-for-touch
// * http://caniuse.com/#feat=css-touch-action
// * http://patrickhlauke.github.io/touch/tests/results/#suppressing-300ms-delay

a,
area,
button,
input,
label,
select,
summary,
textarea  {
  touch-action: manipulation;
}

label,
button,
[type="button"],
[type="reset"],
[type="submit"],
[type="file"],
[type="image"] {
  cursor: pointer;
}

[type="file"]::-webkit-file-upload-button {
  -webkit-appearance: button;
  cursor: pointer;
}

[disabled] {
  cursor: default;
}

table {
  // Reset for nesting within parents with `background-color`.
  background-color: transparent;

  // normalize will remove this in v4
  // https://github.com/necolas/normalize.css/issues/506
  border-collapse: collapse;
  border-spacing: 0;
}

caption {
  padding-top: $base-font-size * .75;
  padding-bottom: $base-font-size * .75;
  color: #818a91;
  text-align: left;
  caption-side: bottom;
}

// normalize will remove this in v4
// https://github.com/necolas/normalize.css/issues/506
td,
th {
  padding: 0;
}

label {
  // Allow labels to use `margin` for spacing.
  display: inline-block;
  margin-bottom: $base-font-size * .5;
}


button {
  border: 0;
  padding: 0;
  color: inherit;
}

@if not $focus-outline {
  :focus {
    outline-width: 0;
  }
}


input,
button,
select,
textarea {
  // https://github.com/10up/sanitize.css/blob/master/dist/sanitize.css
  background-color: transparent;

  // Remove all `margin`s so our classes don't have to do it themselves.
  //
  // margin: 0;

  // Normalize includes `font: inherit;`, so `font-family`. `font-size`, etc are
  // properly inherited. However, `line-height` isn't addressed there. Using this
  // ensures we don't need to unnecessarily redeclare the global font stack.
  line-height: inherit;

  // iOS adds rounded borders by default
  border-radius: 0;

  @if $legacy-ie {
    font-family: $base-font-family;
    font-size: $base-font-size;
  }
}

input::-ms-clear {
  display: none;
}

input[type="number"] {
  width: auto; /* Firefox 36+ */
}

input[type="radio"],
input[type="checkbox"] {
  // Apply a disabled cursor for radios and checkboxes.
  //
  // Note: Neither radios nor checkboxes can be readonly.
  &:disabled {
    cursor: not-allowed;
  }
}

input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"] {
  // Remove the default appearance of temporal inputs to avoid a Mobile Safari
  // bug where setting a custom line-height prevents text from being vertically
  // centered within the input.
  //
  // Bug report: https://github.com/twbs/bootstrap/issues/11266
  -webkit-appearance: listbox;
}

textarea {
  // Textareas should really only resize vertically so they don't break their (horizontal) containers.
  resize: vertical;
}

fieldset {
  // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
  // so we reset that to ensure it behaves more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359.
  min-width: 0;

  // Reset the default outline behavior of fieldsets so they don't affect page layout.
  padding: 0;
  margin: 0;
  border: 0;
}

iframe {
  border: 0;
}

/**
 * https://github.com/necolas/normalize.css/blob/v1/normalize.css
 * 1. Correct color not being inherited in IE 6/7/8/9.
 * 2. Correct text not wrapping in Firefox 3.
 * 3. Correct alignment displayed oddly in IE 6/7.
 */
legend {
  // Reset the entire legend element to match the `fieldset`
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: $base-font-size * .5;
  font-size: $base-font-size * 1.5;
  line-height: inherit;
  border: 0; /* 1 */
  //white-space: normal; /* 2 */
  @if $legacy-ie {
    *margin-left: -7px; /* 3 */
  }
}

input[type="search"] {
  // This overrides the extra rounded corners on search inputs in iOS so that our
  // `.form-control` class can properly style them. Note that this cannot simply
  // be added to `.form-control` as it's not specific enough. For details, see
  // https://github.com/twbs/bootstrap/issues/11586.
  -webkit-appearance: none;

  @if $legacy-ie {
    box-sizing: content-box;
  }
}

output {
  display: inline-block;
}

mark {
  padding: $base-font-size * .2;
  background-color: #fcf8e3;
}

code,
kbd,
pre,
samp {
  font-family: $font-family-monospace;
  tab-size: 2;
}

code {
  font-size: 90%;
  padding: ($base-font-size * .2) ($base-font-size * .4);
  color: #bd4147;
  border-radius: $base-font-size * .25;
  background-color: #f7f7f9;
}

kbd {
  font-size: 90%;
  padding: ($base-font-size * .2) ($base-font-size * .4);
  color: #fff;
  border-radius: $base-font-size * .25;
  background-color: #333;

  kbd {
    font-size: 100%;
    font-weight: bold;
    padding: 0;
  }
}

pre {
  // Remove browser default top margin
  // Reset browser default of `1em` to use `rem`s
  @extend %margin-bottom;

  font-size: 90%;
  line-height: 1.5;
  display: block;
  color: #373a3c;
  overflow: auto;

  // Account for some code outputs that place code tags in pre tags
  code {
    font-size: inherit;
    padding: 0;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
  }
}

.container-fluid {
  @include clearfix();

  margin-right: auto;
  margin-left: auto;
  padding-right: $unit-rem * .9375;
  padding-left: $unit-rem * .9375;
}

@if $legacy-ie {
  .container {
    @extend .container-fluid;

    max-width: 1140px;
    _width: expression((document.documentElement.clientWidth || document.body.clientWidth) > 1200 ? "1140px" : "auto");

    @each $breakpoint, $width in $container-max-widths {
      @include breakpoint($breakpoint) {
        max-width: $width;
      }
    }
  }
}

h1 {
  font-size: $base-font-size * 2.5;
}

h2 {
  font-size: $base-font-size * 2;
}

h3 {
  font-size: $base-font-size * 1.75;
}

h4 {
  font-size: $base-font-size * 1.5;
}

h5 {
  font-size: $base-font-size * 1.25;
}

h6 {
  font-size: $base-font-size * 1;
}

//
// Horizontal rules
//

hr {
  margin-top: $base-font-size * 1;
  margin-bottom: $base-font-size * 1;
  border: 0;
  border-top: 1px solid rgba(0, 0, 0, .1);
}
