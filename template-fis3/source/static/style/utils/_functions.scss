// functions

@function valueOf($x) {
  @if unitless($x) {
    @return $x;
  }

  @else {
    @return $x / (1 + unit($x));
  }
}

@function get-direction($direction) {
  $direction: if($direction == up, top, $direction);
  $direction: if($direction == down, bottom, $direction);
  $opposite-directions: (top: bottom, bottom: top, left: right, right: left);

  $ori-direction: $direction;
  $oppo-direction: map-get($opposite-directions, $direction);

  $directions-rest: map-keys(map-remove($opposite-directions, $ori-direction, $oppo-direction));

  $directions: $ori-direction, nth($directions-rest, 1), nth($directions-rest, 2), $oppo-direction;

  @return $directions;
}

@function pixel-px($values...) {
  @return px-convert(1, $values...);
}

@function design-px($values...) {
  @return px-convert(1, $values...);
}

@function px-convert($scale:1, $values...) {
  $result: ();
  $separator: list-separator($values);

  @each $value in $values {
    $item: $value;
    @if type-of($value) == "number" {
      @if unitless($value) {
        $value: $value * 1px;
      }
      @if unit($value) == "px" {
        $item: $value * $scale;
      }
    } @else if type-of($value) == "list" {
      $item: px-convert($scale, $value...);
    }
    $result: append($result, $item, $separator);
  }
  @return $result;
}

@function pixel-rem($values...) {
  @return rem-convert(1, $values...);
}

@function design-rem($values...) {
  $scale: 320 / $design-width;
  @return rem-convert($scale, $values...);
}

@function rem-convert($scale:1, $values...) {
  $result: ();
  $separator: list-separator($values);

  @each $value in $values {
    $item: $value;
    @if type-of($value) == "number" {
      @if unitless($value) {
        $value: $value * 1px;
      }
      @if unit($value) == "px" {
        $item: $value / $root-font-size * $scale * 1rem;
      }
    } @else if type-of($value) == "list" {
      $item: rem-convert($scale, $value...);
    }
    $result: append($result, $item, $separator);
  }
  @return $result;
}
