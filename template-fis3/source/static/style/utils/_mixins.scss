// mixins

// http://cssmojo.com/the-very-latest-clearfix-reloaded/
@mixin clearfix {
  @if $legacy-ie {
    *zoom: 1;

    &::before,
    &::after {
      content: "";
      display: table;
    }

    &::after {
      clear: both;
    }
  }

  @else {
    &::after {
      content: "";
      display: block;
      clear: both;
    }
  }
}

@mixin size($width, $height: $width) {
  width: if(unitless($width), 1px * $width, $width);
  height: if(unitless($height), 1px * $height, $height);
}

@mixin center-block {
  // display: block;
  margin-left: auto;
  margin-right: auto;
}

// https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757
@mixin hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

@mixin scrollable {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

@mixin ellipsis($lines: 1, $line-height: 0) {
  overflow: hidden;

  @if $lines == 1 {
    @if $legacy-ie {
      word-wrap: normal; //for ie
    }

    text-overflow: ellipsis;
    white-space: nowrap;
  }

  @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;

    $line-height: if(unitless($line-height), 1em * $line-height, $line-height);

    @if value-of($line-height) != 0 {
      line-height: $line-height;
      max-height: $line-height * $lines;

      // &:after {
      //   content: " ...";
      // }
    }
  }
}

// http://www.zhangxinxu.com/wordpress/2012/04/inline-block-space-remove-%e5%8e%bb%e9%99%a4%e9%97%b4%e8%b7%9d/
@mixin clear-spacing {
  display: table;
  word-spacing: -.43em;

  > * {
    word-spacing: normal;
  }
}

// Responsive Breakpoints
@mixin breakpoint($point) {
  @media (min-width: #{map-get($grid-breakpoints, $point)}) {
    @content;
  }
}

// triangle
@mixin triangle($direction: down, $size: 1em) {
  $directions: get-direction($direction);

  display: inline-block;
  width: $size;
  height: $size;
  vertical-align: middle;
  padding-#{nth($directions, 1)}: $size / 4;
  padding-#{nth($directions, 4)}: $size / 4;
  text-align: center;

  &::before {
    content: "";
    display: block;
    width: 0;
    height: 0;
    border-#{nth($directions, 1)}: 0;
    border-#{nth($directions, 2)}: ($size / 2) solid transparent;
    border-#{nth($directions, 3)}: ($size / 2) solid transparent;
    border-#{nth($directions, 4)}: ($size / 2) solid;
  }
}

// arrow
@mixin arrow($direction: right, $size: 1em, $border-width: .125em) {
  $direction: if($direction == up, top, $direction);
  $direction: if($direction == down, bottom, $direction);
  $degs: (right: 45deg, bottom: 45deg + 90deg, left: 45deg + 180deg, top: 45deg + 90deg + 180deg);

  $deg: map-get($degs, $direction);

  display: inline-block;
  vertical-align: middle;
  width: $size / 1.414;
  height: $size / 1.414;
  border-style: solid;
  border-width: $border-width $border-width 0 0;
  transform: rotate($deg);
}

// plus
@mixin plus($size: 1em, $border-width: .125em) {
  display: inline-block;
  vertical-align: middle;
  width: $size;
  height: $size;
  position: relative;

  &::before,
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    margin: auto;
    border-top: $border-width solid;
    height: 0;
  }

  &::after {
    transform: rotate(90deg);
  }
}

// close
@mixin close($size: 1em, $border-width: .125em) {
  @include plus($size, $border-width);

  overflow: hidden;

  &::before {
    transform: rotate(45deg) scaleX(1.414);
  }

  &::after {
    transform: rotate(45deg + 90deg) scaleX(1.414);
  }
}

@mixin font-face($font-name, $font-file: "../font/#{$font-name}") {

  @font-face {
    font-family: $font-name;

    @if $legacy-ie {
      src: url(#{$font-file}.eot);
    }

    src: url(#{$font-file}.eot?#iefix) format("embedded-opentype"), url(#{$font-file}.woff) format("woff"), url(#{$font-file}.ttf) format("truetype"), url(#{$font-file}.svg) format("svg");
    font-weight: normal;
    font-style: normal;
  }
}

@mixin justify-box($children-selector: "> *", $shim-selector: if($legacy-ie, ".shim", "&::after")) {
  text-align: justify;

  #{$shim-selector} {

    @if not $legacy-ie {
      content: "";
    }

    width: 100%;
  }

  #{$children-selector},

  #{$shim-selector} {
    display: inline-block;
  }
}
